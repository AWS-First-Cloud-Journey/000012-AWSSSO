[
{
	"uri": "/2-setup-aws-sso/2.1-enable-sso/",
	"title": "Enable AWS SSO",
	"tags": [],
	"description": "",
	"content": "Activate AWS SSO   Log in to the AWS Management Console using the credentials of the AWS Organization master account.\n  Open the AWS SSO Console.\n  Choose the Enable AWS SSO option.\n  AWS SSO\u0026rsquo;s Single Sign-On feature provides a default repository for storing Users and Groups. If you opt to host them in AWS SSO, the process involves:\n  Creating a User and Group.\n  Adding the User as a Group member.\n  Specifying Groups with the desired level of access to AWS accounts and applications.\n  "
},
{
	"uri": "/",
	"title": "AWS Single Sign-On",
	"tags": [],
	"description": "",
	"content": "AWS Single Sign-On for Organization Overview In this lab, you will learn how to set up the AWS SSO service to efficiently provision and manage resource access to your AWS Organization AWS accounts.\nAWS Single Sign-On (SSO) AWS SSO is a service that enables you to provide Single Sign-On access to one or more AWS accounts within your AWS Organization for users listed in your directory.\nAWS Organization AWS Organization is a service designed for managing multiple AWS accounts within your organization from a central standpoint. With AWS Organization, you can organize AWS Accounts into Organizational Units and aggregate the expenses of all AWS accounts into a Management Account.\nOrganizational Unit (OU) An Organizational Unit is a collection of AWS accounts. Each OU can have up to five levels of nested OUs. Management policies assigned to an OU are applied to all its member OUs and AWS accounts.\nManagement Account The Management Account is the AWS account with the highest level of permissions. It possesses the authority to control all other AWS accounts within the AWS Organization. Additionally, the management account bears the responsibility for covering the general costs incurred by its member accounts.\nContent  Preparatory steps AWS SSO Setup Check Results \u0026amp; Clean Up Resources  "
},
{
	"uri": "/1-prerequisite/1-create-aws-account/",
	"title": "Create AWS Account in AWS Organizations",
	"tags": [],
	"description": "",
	"content": "Creating AWS Accounts in AWS Organization In this step, you will practice creating AWS accounts for Security, Shared Services, Logging, and Application within the AWS Organization service. AWS accounts created within the AWS Organization can only be accessed using the IAM Role or root user information.\nContents  Creating AWS Accounts in AWS Organization Contents Create AWS Account in AWS Organization  Create AWS Account in AWS Organization   Go to the AWS Management Console and search for the AWS Organizations service.\n  In the AWS Organizations Console, click on Add an AWS account.\n  Select Create an AWS account and provide the following details:\n AWS account name: Logging Email address of the account\u0026rsquo;s owner: example+lab12Logging@amazon.com.vn   Note: To create multiple AWS accounts with the same email, you can modify your email by adding a \u0026quot;+\u0026quot; followed by a description.\n  IAM role name: Leave the default as OrganizationAccountAccessRole. This role name will be used to access your AWS member account through the [role switch] method.    Review the provided information and then select Create AWS account.\n  Repeat the above steps to create accounts for Security, Shared Services, and Application. Depending on individual or business requirements, you can create as many accounts as needed.\n Note: If the email address used to create your AWS Account already exists, AWS will respond with the reason \u0026ldquo;EMAIL ALREADY EXISTS\u0026rdquo; in the Failure reason section under Requests.\n   "
},
{
	"uri": "/1-prerequisite/",
	"title": "Preparation steps",
	"tags": [],
	"description": "",
	"content": "Overview This exercise is a part of the Landing Zone practice.\nTo set up the required resources, you will establish an AWS Organization with four Organization Units (OUs) for grouping the accounts. Create AWS Accounts with the following names: Security, Shared Services, Logging, and Application. Then, assign each account to its respective OU.\nThese created accounts will be allocated the following resources (Note: Refer to this section only as it is beyond the scope of the lab):\n  Logging Account: This serves as a centralized repository for Amazon VPC Flow Logs, CloudTrail logs, and Config logs.\n  Security Account: Here, you will collect AWS Config data, set up an Amazon GuardDuty master, and configure alerts.\n  Network/Shared Services Account: This account will host a shared VPC, facilitating remote connections to other accounts. The primary AWS Direct Connect is integrated with the AWS Transit Gateway to establish communication with VPCs in other accounts.\n  Business Unit Accounts: These accounts cater to Analytics-Prod and Analytics-non-prod needs.\n  Content  Create AWS Account in AWS Organization Setting up Organization Unit Invite AWS Account to AWS Organization Access Member Account in Organization  "
},
{
	"uri": "/2-setup-aws-sso/2.2-add-user-group/",
	"title": "Add Users and Groups",
	"tags": [],
	"description": "",
	"content": "Add Users and Groups To proceed, you need to create users and groups as detailed in the table below. Users listed under the User logon name column will be assigned to the respective groups listed under the Group column.\n   User logon name Groups     Super-User AWS-Shared-Services-Admin; AWS-Shared-Services-Read-Only; AWS-Security-Admin; AWS-Security-Read-Only; AWS-Logging-Admin; AWS-Logging-Read-Only;   Security-User AWS-Security-Read-Only    Create Groups   At present, there are no existing groups. Choose \u0026ldquo;Create group\u0026rdquo; to establish the groups mentioned in the table above.\n  Follow these steps to create a group:\n Provide group names and descriptions when prompted. Click \u0026ldquo;Create.\u0026rdquo;    Repeat this process for the remaining groups.\n  Add User   Open the AWS SSO Console and access the \u0026ldquo;Users\u0026rdquo; section from the left sidebar.\n Click on \u0026ldquo;Add user\u0026rdquo; and furnish the required information.    Complete the user information as follows:\n Username: This will serve as the login ID and cannot be changed later. (Example: Super-User) Password: Choose one of the following methods to deliver the user\u0026rsquo;s password:  \u0026ldquo;Send an email to the user with password setup instructions\u0026rdquo;: AWS will automatically send an email to the user for accessing the AWS SSO User portal. \u0026ldquo;Generate a one-time password that you can share with the user\u0026rdquo;: Provides a URL and password to be sent manually. Choose this option in this exercise, or select the email option.   Email address: Enter the user\u0026rsquo;s email. Confirm email address: Re-enter the user\u0026rsquo;s email. For clarity, utilize the prefix of the user\u0026rsquo;s logon name as the first name and the suffix as the last name. For instance, for \u0026ldquo;Super-User,\u0026rdquo; the first name would be \u0026ldquo;Super\u0026rdquo; and the last name \u0026ldquo;User.\u0026rdquo;    Click Next.\n  Select the relevant groups and click Next.\n  Click Add user.\n  Complete the user creation process.\n  If you chose the \u0026ldquo;Send an email to this user with password setup instructions\u0026rdquo; option, follow the email verification steps for logging in.\n  Click Send.\n  Execute the Verify action.\n  Perform the password configuration. Note: Keep the password and portal page details for future logins.\n  "
},
{
	"uri": "/2-setup-aws-sso/",
	"title": "Set up AWS SSO",
	"tags": [],
	"description": "",
	"content": "Granting Single Sign-On (SSO) Access to AWS Accounts in AWS Organizations In this section, you will learn how to provide Single Sign-On (SSO) access to users within your directory for one or multiple specific AWS accounts within AWS Organizations. Once users are logged in, they will only see the AWS account icon (e.g., Logging) that has been assigned to them from their user portal.\nUpon clicking the respective icon, users can then choose the IAM role they wish to use when accessing the AWS Console for that particular AWS account.\nContents:  Enable AWS SSO Add Users and Groups Permission Set Assign Permissions  "
},
{
	"uri": "/1-prerequisite/2-configure-ou/",
	"title": "Setting up the Organization Unit",
	"tags": [],
	"description": "",
	"content": "Setting Up Organization Units In this step, you will practice setting up the Organization Units for the AWS accounts created in the previous section. The Organization Units include Security, Shared Services, Logging, and Application. These units will be situated within the Root, where all the OUs and AWS accounts are located.\nContents  Setting Up Organization Units Contents Create Organization Unit Move AWS Accounts to Respective Organization Unit  Create Organization Unit   Open the AWS Management Console and search for the AWS Organizations service.\n  Select the Root, click on Actions, and then choose Create new under the Organizational Unit section.\n  On the Create organizational unit in Root page:\n In the Details section, provide a name for the OU (For example: Logging Unit).    Review the information and click Create organizational unit.\n  Repeat the above steps for the remaining Organization Units.\n  Move AWS Accounts to Respective Organization Unit   Go to the AWS Management Console and find the AWS Organizations service using the search bar.\n  Check the AWS account you wish to move (For instance: Logging), click on Actions, and then select Move under AWS Account.\n  Tick the appropriate OU (Example: Logging Unit) and click Move AWS account.\n  Repeat the above steps for the remaining AWS and Organization Unit accounts:\n Move the Security Account to the Security Unit Move the Shared Services Account to the Shared Services Unit Move the Application Account to the Application Unit    "
},
{
	"uri": "/3-test-permission/",
	"title": "Test",
	"tags": [],
	"description": "",
	"content": "Accessing AWS Accounts in AWS Organizations through AWS SSO User In this section, you will learn how to access AWS accounts within AWS Organizations using the AWS SSO User. If you no longer need these resources, you can follow the steps to clean them up.\nChecking Results To access AWS accounts within AWS Organizations through AWS SSO User, follow these steps:\n  Open your web browser in incognito mode and navigate to the User portal URL link that you saved in the previous section.\nAlternatively, you can store the User portal URL in the set password section.\n  In the User Portal, enter the username and password you saved to log in.\n  If this is your first time accessing the AWS SSO User, you\u0026rsquo;ll need to change the password as you set up in the previous section. Follow the instructions to enter a new password and select Set new password.\n  You can now select the AWS account and access rights that were set up in the previous section. For instance, the image below illustrates the account and access permissions that the \u0026ldquo;Security-User\u0026rdquo; has. If you log in as \u0026ldquo;Super-User,\u0026rdquo; you\u0026rsquo;ll have access to AdministratorAccess for each account.\n  Click Management console to access the AWS console for the \u0026ldquo;Security\u0026rdquo; account.\n  Congratulations! You\u0026rsquo;ve successfully accessed your account.\n  For CLI access, you can choose Command line or programmatic access, which will display SSO configuration instructions.\n  Depending on your operating system, open either the Command Prompt (CMD) or PowerShell to perform the configuration.\n  "
},
{
	"uri": "/2-setup-aws-sso/2.3-create-permissionset/",
	"title": "Create Permission Set",
	"tags": [],
	"description": "",
	"content": "Permission Set A Permission Set defines the level of access that Users and Groups have within AWS accounts in the AWS Organization. These permission sets are stored in AWS Single Sign-On (SSO) and are provided to AWS accounts as IAM roles. Multiple permissions can be assigned to a single User.\n To begin, follow these steps:  Open the AWS SSO Console. Choose \u0026ldquo;AWS accounts\u0026rdquo; from the left sidebar. Navigate to the Permission sets tab. Click on Create permission set.    On the \u0026ldquo;Create new permission set\u0026rdquo; page:  Select the desired Permission set type.    Choose AdministratorAccess to grant comprehensive access to AWS resources and services.  Provide the name as AdministratorAccess and proceed by selecting Next.  Review your choices and confirm by selecting Create.  This completes the creation of the Permission set.  To configure the Permission Set with SecurityAudit permissions, repeat the above steps. The result will be displayed as shown below:  "
},
{
	"uri": "/1-prerequisite/3-invite-aws-account/",
	"title": "Invite AWS Account to AWS Organization",
	"tags": [],
	"description": "",
	"content": "Adding an AWS Account to Organizations Step 1: Invite an Existing AWS Account  Go to the AWS Management Console and search for the AWS Organizations service in the search bar. Select Add an AWS account.  Choose Invite an existing AWS account. Enter the email address or Account ID of the AWS Account you wish to add to the Organization, e.g., fcj@amazon.com.vn or 888800009920. Click on Send invitation.   Step 2: Check Your Invitation to Join Organizations  In the left pane, select Invitations. You will see the Account ID you added in step 1, with the status OPEN.   Step 3: Accept an Invitation to Join Organizations  Access the AWS Management Console of the Account you added in step 1 and find the AWS Organizations service in the search bar.  On the right side of the screen, select the invitation View 1 invitation. Note that the AWS Organization service is free of charge.  Select Accept invitation.  Result:  Please note that you will only see this invitation if the AWS Account has not already joined any AWS Organizations.  Step 4: Check AWS Organizations  Go back to the AWS Account from step 1 and verify if the Account added in step 3 has joined Organizations.  Here, you can view the entire structure of Organizations, including Organization Units with member accounts and management accounts. The management account will serve as the main account to manage and access member accounts through the switch role function.  Congratulations, the AWS Account has been successfully added with join date details.\n"
},
{
	"uri": "/2-setup-aws-sso/2.4-add-permission/",
	"title": "Assign permissions",
	"tags": [],
	"description": "",
	"content": "Assign Access Rights to Users and Groups To configure access rights for AWS accounts within SSO groups based on specific job functionalities, follow the steps below:\nAccount and Group Configuration    Accounts Groups Job Function Policy     Management Account, shared-services, logging,security AWS-Shared-Services-Admin; AWS-Security-Admin; AWS-Logging-Admin AdministratorAccess   Management Account, shared-services, logging, security AWS-Shared-Services-Read-Only; AWS-Security-Read-Only; AWS-Logging-Read-Only SecurityAudit    Instructions   Open the AWS SSO Console and navigate to the AWS accounts section in the left sidebar.\n  In the AWS organization tab, locate the list of AWS accounts. Choose one or more accounts to which you want to assign access (e.g., Management Account, shared-services, logging, and security). Then click on Assign users or groups.\n  Select the relevant groups and click Next.\n  Choose the desired Permission set.\n  Click Submit.\n  Repeat the same process for the Security Account.\n  Select the groups and click Next.\n  Choose the Permission set and click Next.\n  Click Submit.\n  Congratulations! You have successfully configured AWS SSO access.\n  "
},
{
	"uri": "/1-prerequisite/4-switch-role/",
	"title": "Access member account in Organization",
	"tags": [],
	"description": "",
	"content": "Switching Roles for Accessing Member Accounts in AWS Organization In this step, you will use the Switch Role function to access member accounts from your management account.\nContent  Switch Role to Member Accounts Created by AWS Organization (Step 1.1) Switch Role to Member Accounts Invited to Join AWS Organization (Step 1.3)  A) Switch Role to Member Accounts Created by AWS Organization   Log in to your management account:\n Use an IAM User to log in. Go to the AWS Management Console and search for the AWS Organizations service in the search bar. Copy the Account ID (a 12-digit number located below the account name) of the account you wish to access. In the top right corner, next to the account name, click the triangle and select Switch role.   Note: If you are using a root account, you won\u0026rsquo;t see the Switch role function. If you\u0026rsquo;re unfamiliar with creating an IAM User (with Admin permission) for this lab, review the article: Manage Access with AWS Identity and Access Management (AWS IAM).    Switching Roles:\n Go to Account and paste the Account ID you copied in Step 1 (e.g., 999999999943). In the Role section, enter the role name you used when creating the account in Step 1.1 (e.g., OrganizationAccountAccessRole, recommended by AWS). Optionally, give a Display Name for easy identification. Choose a color for the role\u0026rsquo;s item. Select Switch roles.   Result:  Congratulations on successfully switching roles!\n Verify if you have permissions for universal services:    Explanation:   You can easily access the member account created through AWS Organizations and have full admin permissions because:\n The IAM User used in Step 1 has admin permissions. When creating a new account via AWS Organizations, AWS automatically adds the AdministratorAccess permission to the OrganizationAccountAccessRole role. Check:    You are now in the member account with the Display Name: FCJ-Dev. In the search box, type and select the IAM service.\n  On the right, select Roles.\n  Choose the Role name: OrganizationAccountAccessRole.\n  You should see the admin permission: AdministratorAccess with the explanation: Provides full access to AWS services and resources.\n  Extension: After following the tutorial: Administrating Access with AWS Identity and Access Management (AWS IAM) to create an IAM User for logging into the management account, and assigning admin permission (AdministratorAccess) to perform the switch role, there\u0026rsquo;s no need to add assume role permissions (explained here) since admin permission already encompasses this capability.\nHowever, for the principle of least privilege, consider granting assume role permission only to users who need to switch between accounts. For instance, in an AWS Organization with accounts for Dev, Test, and Production environments, provide the Dev Lead IAM User access to the management account with only assume role permissions for Dev and Test environments. This ensures convenience while maintaining security.\nPractice: Creating User Groups:    Within the management account, follow item 2.1 in the article Managing Access Rights with IAM.\n  In Step 4, enter a User Group Name (e.g., DevGroup).\n  Select Create policy, a new window will appear.\n  Creating a Customer Managed Policy:    Choose a service: type STS, then select STS from the options.\n  Actions -\u0026gt; Select actions -\u0026gt; type AssumeRole -\u0026gt; in the middle, select AssumeRole.\n  Resources -\u0026gt; Specific -\u0026gt; Add ARN\n Account *: enter the member Account ID (the ID copied in Step 1 above, e.g., 999999999943). Role name with path *: enter the role name from Step 1.1 (e.g., OrganizationAccountAccessRole). Select Add.    Select Next: Tags.\n  Select Next: Review.\n  Name *: enter a policy name (e.g., switch_role_999999999943).\n  Select Create policy.\n  Attaching the Policy to User Groups:    Go back to the Create user group page.\n  In the Attach permissions policies - Optional section, click the refresh icon.\n  In the search box, enter: switch_role_999999999943.\n  Check the box.\n  Select Create Group.\n  Creating a User:    Follow item 2.2 in the article Managing Access Rights with IAM.\n  In Step 2, enter the User name as DevLead.\n  In Step 3, select the DevGroup.\n  Complete the remaining steps and confirm the creation of the new IAM User.\nNow, the IAM User DevLead has been created and assigned the policy switch_role_999999999943 via the group DevGroup.\nNote: While the Users and User Groups interface allows you to assign permissions directly, it\u0026rsquo;s best practice to assign permissions to User Groups first, and then add Users to Groups. This centralized approach simplifies permission management.\n   Logging in with the newly created IAM User:\nResult:\n  Performing Switch Role via Member Account:\nNote: You\u0026rsquo;ve logged into the IAM User but are still in the management account. Now, you\u0026rsquo;ll initiate the Switch Role to access the member account.\n Repeat the steps from Step 2.  Congratulations on successfully switching roles via the member account (ID: 999999999943) with the IAM User DevLead.\nYou can use the Create an AWS account function to create an account for the test environment and follow Steps 3 to 8 to perform the switch role for the Test environment with the corresponding Account ID.\n  B) Switch Role to Member Accounts Invited to Join AWS Organization When reviewing the following items:\n 1.1 Create an AWS Account in AWS Organizations 1.3 Invite AWS Account to AWS Organization  You\u0026rsquo;ll notice the ability to create an AWS Account in AWS Organizations (Create an AWS account) includes a section to create an IAM role for the management account to access member account resources via Switch Role.\nHowever, this functionality is missing in the process of inviting an AWS Account to an AWS Organization (Invite an existing AWS account). Therefore, you need to manually add an IAM Role for the invited AWS Account.\n Creating a Role with Admin Rights:    Use a member account that has been added to the AWS Organization in [1.3].\n  Go to the AWS Management Console, search for the IAM service, select Roles, and click Create role.\n  Select AWS account, then Another AWS account.\n  Enter the Account ID of the management account in the provided field (e.g., 999999999963).\n  Click Next.\n  In the Permissions policies section, enter AdministratorAccess and check the corresponding box.\n  Click Next.\n  Provide a Role name (e.g., OrganizationAccountAccessRole).\n  Scroll down and click Create role.\n  Copy the Account ID of the member account (e.g., 888800009920) by clicking the square.\n  Initiating Switch Role:    Log in to your management account (similar to Steps 1 and 2 in Part A).\n  Click the triangular bookmark in the top right corner, next to the account name, and select Switch role.\n  In the Account field, paste the copied Account ID from Step 1 (e.g., 888800009920).\n  In the Role field, enter the role name created in Step 1 (e.g., OrganizationAccountAccessRole).\n  Optionally, provide a Display Name for easy identification.\n  Choose a color for the role\u0026rsquo;s item.\n  Select Switch Role.\n  Congratulations! You have successfully switched roles and accessed the member account that was invited to join AWS Organizations.\n  Conclusion: From Step 1.1 to Step 1.4, it\u0026rsquo;s clear that the management account serves as the admin account in the AWS Organization service, while member accounts are permanent member accounts. To add member accounts to the Organization, there are two approaches:\n Create a new account using the Create an AWS account function. Invite an existing account using the Invite an existing AWS account function.  Additionally, you can switch roles to access member accounts using the Switch Role function. Depending on the approach chosen, the conditions for successful role switching differ:\n  With the Create an AWS account method, switching roles is relatively simple since AdministratorAccess permission is automatically granted to the OrganizationAccountAccessRole during account creation via AWS Organizations. Furthermore, assume role permissions corresponding to the member account ID need to be granted to the IAM User in the management account.\n  With the Invite an existing AWS account method, switching roles requires more steps. You need to manually create the OrganizationAccountAccessRole and assign AdministratorAccess permissions to the management account\u0026rsquo;s account ID. Additionally, assume role permissions corresponding to the member account ID should be granted to the IAM User in the management account.\n  Remember that switching roles isn\u0026rsquo;t the only method for accessing member accounts. In the steps outlined in item 2, you\u0026rsquo;ll explore another approach using AWS SSO (Single Sign-On).\n"
},
{
	"uri": "/4-clean-up/",
	"title": "Clean up resources",
	"tags": [],
	"description": "",
	"content": "Clean up resources   Access the AWS SSO Management Console.\n  Delete Groups:\n Navigate to Groups. Select the groups associated with this lab. Click on Delete groups. In the Delete groups prompt, enter \u0026ldquo;DELETE\u0026rdquo; in the provided box. Confirm the deletion by clicking Delete groups.    Delete Users:\n Go to Users. Check the users related to this lab. Click on Delete users. In the Delete users prompt, enter \u0026ldquo;DELETE\u0026rdquo; in the provided box. Confirm the deletion by clicking Delete users.    Remove Access for AWS Accounts:\n Select AWS Accounts. Click on the name of an AWS account. Revoke all account access rights. Repeat this step for accounts with assigned access rights that need to be deleted.     Delete Permission Sets:\n Navigate to AWS accounts. Go to the Permission sets tab. Select the relevant permission sets. Press Delete. In the prompt, enter the name of the permission set in the box and click Delete.    ::: tip Note: Ensure you back up data from these accounts if you anticipate needing them in the future. Deleting an account results in permanent deletion of all associated resources and data. :::\nDelete AWS Accounts (optional for future labs):  To delete an AWS account, log in as the root user.  Visit the AWS console login page at https://console.aws.amazon.com/. On the Sign in page, choose Root user and enter the email of the account you want to delete (e.g., example+lab12Logging@amazon.com.vn). Complete the Security Check and select Forgot Password?  AWS will send a forgot password confirmation email to the registered email address (e.g., example@amazon.com.vn). Follow the email instructions to change your password and sign in to your AWS account.   After logging in as the root user, click on the account name in the upper right corner.  Select My Account. Scroll down to find the Close Account section. Check all the boxes and select Close Account.      ::: tip When creating a new AWS account in the AWS Organization, the root user\u0026rsquo;s password is automatically generated and inaccessible. You can access the root user by recovering the forgotten password (forgot password). :::\n"
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]