[
{
	"uri": "/2-setup-aws-sso/2.1-enable-sso/",
	"title": "Enable AWS SSO",
	"tags": [],
	"description": "",
	"content": "Activate AWS SSO  Log in to AWS Management Console using the AWS Organization master account credentials.  Open AWS SSO Console  Select Enable AWS SSO.  Single Sign On on AWS SSO gives you a default repository where you can store your Users and Groups. If you choose to host them in AWS SSO, all you need to do is:\n Create a User and Group. Add the User as a Group member. Specify Groups with the desired level of access to AWS accounts and applications.  "
},
{
	"uri": "/",
	"title": "AWS Single Sign-On",
	"tags": [],
	"description": "",
	"content": "AWS Single Sign-On for Organization Overview In this lab, you\u0026rsquo;ll practice setting up the AWS SSO service to easily provision and manage resource access to your AWS Organization AWS accounts.\nAWS Single Sign-On (SSO) AWS SSO is a service that allows you to grant users in your directory (directory) SSO access to one or more AWS accounts in the AWS Organization.\nAWS Organization AWS Organization is an account management service that allows you to centrally manage multiple AWS accounts in your organization. With AWS Organization, you can group AWS Accounts into Organizational Units and aggregate the costs of all AWS accounts into Management Account.\nOrganizational Unit (OU) Organizational Unit is a group of AWS accounts. An OU can contain up to 5 layers of nested OUs within it. You can assign management policies to an OU, and it will apply to all member OUs and member AWS accounts.\nManagement Account Management Account is the AWS account with the highest permissions and can control all other AWS accounts in an AWS Organization. The management account is also responsible for paying the general costs of member accounts.\nContent  Preparatory steps AWS SSO Setup Check Results \u0026amp; Clean Up Resources  "
},
{
	"uri": "/1-prerequisite/1-create-aws-account/",
	"title": "Create AWS Account in AWS Organizations",
	"tags": [],
	"description": "",
	"content": "In this step, you will practice creating AWS accounts (Security, Shared Services, Logging, and Application) inside the AWS Organization service. AWS accounts created within the AWS Organization can only be accessed using the IAM Role or root user information.\nContent\n Create AWS Account in AWS Organization  Create AWS Account in AWS Organization  Go to AWS Management Comsole and find the AWS Organizations service in the search bar.  At AWS Organizations Console, select Add an AWS account  Select Create an AWS account and enter the following parameters:  AWS account name: Logging Email address of the account\u0026rsquo;s owner: example+lab12Logging@amazon.com.vn    To create multiple AWS accounts with the same email, you can take your email name, add a \u0026quot;+\u0026quot;, and add a description after it.\n\r IAM role name: keep default as OrganizationAccountAccessRole. This will be the role name that you will use to access your AWS member account via the [role switch] method.  Check the information and select Create AWS account  Repeat the above steps for Security, Shared Services, and Application accounts, depending on each individual or business account, you can create as many accounts as you want. limit.  Note: if the email address you used to create your AWS Account already exists, AWS will respond as follows in the request:\n Select Requests   In the Failure reason section, the reason is: EMAIL ALREADY EXISTS  "
},
{
	"uri": "/1-prerequisite/",
	"title": "Preparation steps",
	"tags": [],
	"description": "",
	"content": "Overview This exercise is part of the Landing Zone practice.\nTo prepare the necessary resources, you will create an AWS Organization, with 4 Organization Units to group the accounts. Create AWS Accounts with names: Security, Shared Services, Logging and Application and add the Accounts to each respective OU.\nThe created accounts will be allocated the following resources (Note: you only refer to this section as it is beyond the scope of the lab):\n Logging Account: A centralized place for Amazon VPC Flow Logs, CloudTrail logs, and Config logs. Security Account: Gather AWS Config, Amazon GuardDuty master, and alerts. Network/Shared Services Account: Share a VPC for remote connections to other accounts. The primary AWS Direct Connect is installed with the AWS Transit Gateway to communicate with VPCs in other accounts. Business Unit accounts: accounts for Analytics-Prod, and Analytics-non-prod.  Content  Create AWS Account in AWS Organization Setting up Organization Unit Invite AWS Account to AWS Organization Access member account in Organization  "
},
{
	"uri": "/2-setup-aws-sso/2.2-add-user-group/",
	"title": "Add Users and Groups",
	"tags": [],
	"description": "",
	"content": "Add Users and Groups You need to create Users and Groups as shown in the table below. In which, User in column User logon name will belong to Groups in column Group.\n   User logon name Group     Super-User AWS-Shared-Services-Admin; AWS-Shared-Services-Read-Only; AWS-Security-Admin; AWS-Security-Read-Only; AWS-Logging-Admin; AWS-Logging-Read-Only;   Security-User AWS-Security-Read-Only    Create Group  Currently, you still don\u0026rsquo;t have any groups. Select Create group to create the groups listed in the table above  At the prompt to create a group, enter the names of the groups and the descriptions of the groups and then click Create  Repeat this step for the remaining groups  Add User.  Open the AWS SSO Console. Select Users in the left sidebar  Select Add user and provide the necessary information    Complete the information   Username - This Username will be required to log in to the User portal and cannot be changed later. (Example: Super-User) Password - Select one of the following options to send the User\u0026rsquo;s password. Send an email to the user with password setup instructions - With this option, Amazon Web Services will automatically send the User an email inviting the User to access the AWS SSO User portal. Generate a one-time password that you can share with the user - This option provides a URL to the User portal and a password that you can send to the User yourself. You will choose this option in this exercise. Or select Send an email to this user with password setup instructions. *Email address: enter User\u0026rsquo;s email Confirm email address: re-enter User\u0026rsquo;s email For clarity, use the prefix of the User logon name as the First name and the suffix as the Last name. For example, for Super-User, Super will be the First name, while User will be the Last name Display name  Select Next.  Select the groups and select Next  Select Add user*  Complete user creation.  If you select Send an email to this user with password setup instructions. then perform email verification to log in.  Select Send  Execute Verify  Perform password configuration. Note: keep password and portal page to log in.  "
},
{
	"uri": "/2-setup-aws-sso/",
	"title": "Set up AWS SSO",
	"tags": [],
	"description": "",
	"content": "In this section, you will grant Users in your directory SSO access to one or more specific AWS accounts in AWS Organizations. Once logged in, the User will only see the AWS account icon (Example: Logging) that they have been assigned from within their User portal (User portal). When they click on the icon, they can choose which IAM Role they want to use when they log into the AWS Console for that AWS account.\nContent:\n first. Enable AWS SSO 2. Add Users and Groups 3. Permission Set 4. Assign permissions   "
},
{
	"uri": "/1-prerequisite/2-configure-ou/",
	"title": "Setting up the Organization Unit",
	"tags": [],
	"description": "",
	"content": "In this step, you will practice setting up the Organization Units (Security, Shared Services, Logging and Application) corresponding to the AWS accounts created in this section. before. The OUs will be located inside the Root - where all the OUs and AWS accounts are located.\nContent\n Create Organization Unit Move AWS accounts to respective Organization Unit  Create Organization Unit   Go to AWS Management Comsole and find the AWS Organizations service in the search bar.\n  Tick Root, select Actions, and select Create new under Organizational Unit\n  At the Create organizational unit in Root page:  Under Details, enter the name of the OU (Example: Logging Unit)    Check the information and select Create organizational unit  Repeat with the remaining Organization Units.  Move AWS accounts to respective Organization Unit   Go to AWS Management Comsole and find the AWS Organizations service in the search bar.\n  Tick the AWS account you want to move (Example: Logging), select Actions, and select Move under AWS Account\n  Tick the appropriate OU (Example: Logging Unit) and select Move AWS account  Repeat for the remaining AWS and Organization Unit accounts:  Security Account with Security Unit Shared Services with Shared Services Unit Application Account with Application Unit    "
},
{
	"uri": "/3-test-permission/",
	"title": "Test",
	"tags": [],
	"description": "",
	"content": "In this section, you\u0026rsquo;ll try accessing AWS accounts in AWS Organizations through the AWS SSO User. You can then proceed to clean up the resources if you no longer need them.\nCheck results You will try accessing AWS accounts in AWS Organizations through AWS SSO User\n Open your browser in incognito mode and go to the User portal URL link you saved in the previous section.  Or store User portal URL at set password\n In User Portal, enter the saved username and password to login.\n  If you are accessing the AWWS SSO User for the first time, you will have to change the password first as you set up in the previous section. Enter the new password according to the instructions and select Set new password.\n  You will be able to select the AWS account and access rights set up in the previous section. (For example, the figure below shows the account and the access permissions that Security-User can use. If you log in to Super-User, you will be able to access AdministratorAccess for each account)  Select Management console to access the Security account\u0026rsquo;s AWS console.  Congratulations, you have successfully accessed your account.  For CLI you can choose Command line or programmatic access. Displays SSO configuration instructions.  Open CMD or PowerShell according to the operating system to configure.  "
},
{
	"uri": "/2-setup-aws-sso/2.3-create-permissionset/",
	"title": "Create Permission Set",
	"tags": [],
	"description": "",
	"content": "Permission Set Permission Set defines the access that Users and Groups have to AWS accounts in the AWS Organization. Permission sets are stored in AWS SSO and provided to AWS accounts as IAM roles. You can assign multiple permissions to a User.\n Open the AWS SSO Console. Select AWS accounts in the left sidebar.   Select the Permissionssets tab. Select Create permission set.  On the Create new permission set page:   Select Permission set type  Select AdministratorAccess to provide full access to AWS resources and services.  Enter AdministratorAccess and select Next  Check and select Create  Complete creation Permission set  Repeat the above steps to set the Permission Set with SecurityAudit permission. You will get the result as shown below  "
},
{
	"uri": "/1-prerequisite/3-invite-aws-account/",
	"title": "Inviet AWS Account to AWS Organization",
	"tags": [],
	"description": "",
	"content": "In step 1.1, you created a new AWS Account from the AWS Organization service! So if you already have one or more AWS Accounts with Workloads running \u0026amp; you want to add that AWS Account to your Organization to easily allocate resources, group accounts (like step 1.2,) and apply the following best pratice managed principles -\u0026gt; then the Invite an existing AWS accoun function will assist you.\n Add AWS Account to Organizations    Go to AWS Management Comsole and look for AWS Organizations service in the search bar.\n  Select Add an AWS account\n    Select Invite an existing AWS account\n  In the Email address or account ID of the AWS account to invite field, enter the email address or Account ID of the AWS Account you want to add to the Organization, for example: fcj@amazon.com.vn or 888800009920\n  Select Send invitation\n  Check your invitation to join Organizations   In the left pane, select Invitations, you will see the Account ID you just added in step 1 - appeared here with the status OPEN  Accept an invitation to join Organizations   Access the AWS Management Comsole of the Account you just added in step 1, find the AWS Organizations service in the search bar   On the right side of the screen, select the invitation View 1 invitation In addition, the AWS Organization service is free of charge  Note: you can only see the above invitation, if and only if this AWS Account has not joined any AWS Organizations\nSelect Accept invitation   Result:   Even though you are on Dashboard, you can only see the information of Organizations that you are attending, because you are a member account  Check AWS Organizations   Go back to AWS Account in step 1, check if the Account just added in step 4 has joined Organizations or not    Here, you can see the entire structure of Organizations including Organization Units with member accounts \u0026amp; management accounts.\n  With management account will be the main acc to manage and access member accounts through switch role function\n  Congratulations, AWS Account has been added with join date details\n"
},
{
	"uri": "/2-setup-aws-sso/2.4-add-permission/",
	"title": "Assign permissions",
	"tags": [],
	"description": "",
	"content": "Assign access rights to Users and Groups You need to set up AWS accounts in SSO groups with the following job functionality:\n   Accounts Groups Job function policy     Management Account, shared-services, logging,security AWS-Shared-Services-Admin; AWS-Security-Admin; AWS-Logging-Admin AdministratorAccess   Management Account, shared-services, logging, security AWS-Shared-Services-Read-Only; AWS-Security-Read-Only; AWS-Logging-Read-Only SecurityAudit     Open the AWS SSO Console. Select AWS accounts in the left sidebar.   In the AWS organization tab, in the list of AWS accounts, select one or more accounts to which you want to assign access. (Example: Management Account, shared-services, logging, and security). Then select Assign users or groups  Select the groups and select Next  Select Permission set  Select Submit  Same, For Security Account  Select the groups and select Next  Select Permission set and select Next  Select Submit  Congratulations, you have successfully set up AWS SSO.  "
},
{
	"uri": "/1-prerequisite/4-switch-role/",
	"title": "Access member account in Organization",
	"tags": [],
	"description": "",
	"content": "In this step, you will stand at management account to access member accounts through switch role function\nContent\n  switch role to member accounts created by AWS Organization (step 1.1)\n  switch role to member accounts invited to join AWS Organization (step 1.3)\n  A) Switch role to member accounts created by AWS Organization  Login to management account    Use IAM User to login\n  Go to AWS Management Comsole and look for AWS Organizations service in the search bar.\n  Copy the Account ID (Has 12 numbers \u0026amp; appears below the name of the Account) that you want to access\n  At the right corner, after the name of the Account, select the triangle, Select Switch role\n    Note, if you are using root account, you will not be able to see Switch role function\n  If you are not familiar with creating IAM User (with Admin permission) to serve this lab, please review the article: Manage Access with AWS Identity and Access Management (AWS IAM)\n  Switching Roles   Go to Account, paste the account ID you copied in step 1, for example: 999999999943 In the Role section, enter the role name you used when creating the Account (in step 1.1), eg: OrganizationAccountAccessRole (this is the role name recommended by AWS) In the Display Name section, although this is not mandatory information, it is recommended that you name it for easy identification \u0026amp; avoid confusing access to the environment! In practice there will be many converted accounts. Ex: FCJ-DEV Print item color: choose the color you like Select Switch roles  note: if you need to change Display Name, just go back to step 2 and add the name you want\n Result:  Congratulations on your successful Switch Role!\n Check if you have permissions on universal services  Explanation:   You can access easily into the account (member account) created from AWS Organizations \u0026amp; have full admin permission,because:\n The IAM User you used in step 1 has admin permission. While creating a new account with AWS Organizations, with your consent - AWS automatically added AdministratorAccess permission to the OrganizationAccountAccessRole role. Check:    You are standing at member accouunt with Display name: FCJ-Dev, in the search box, type and select IAM service\n  On the right, select Roles\n   Select Role name: OrganizationAccountAccessRole   You should see admin permission: AdministratorAccess with explanation Provides full access to AWS services and resources  Extend: Once you have followed the tutorial: Administrating Access with AWS Identity and Access Management (AWS IAM) to create an IAM User to log in * *management account** then you give admin permission: AdministratorAccess to perform the switch role, so you don\u0026rsquo;t need to add assume role permissions ([**explained link**]](https://000002.awsstudygroup.com/1-introduction/1.3-iam-role/)) because admin permission already include this permission.\nBut in practice to ensure the least privilege for the granting of minimal permission, as an administrator, you should only grant assume role permission to the user who is switched via the account - representing environment that the team needs.\nExample: Your AWS Organizations has 4 accounts running workload respectively for 3 environments: Dev, Test, Produciton and the 4th acc is management account (recommended by AWS: it should not run any Workload, just for consolidated billing)! By the nature of work, Dev Lead needs to move back and forth between Dev and Test environments without logging in with User Name, Password to 2 AWS accounts!\nAt this point, switching the role to move between the two environments will be very quick and convenient. So as an administrator - you will give DevLead an IAM User access to management account who only has assume role permission of Dev and Test environments to perform the switch but no any other rights on the Production environment.\nPractice: Create User Groups   Stand at management account and do again item 2.1 in the article Managing access rights with IAM In step 4, User Group Name enter the Group name (Example: DevGroup) Select Create policy, a new window appears  Create Customer managed Policy   Choose a service: type STS -\u0026gt; on the left, select STS  STS is Security Token Service: is a web service that allows users to send temporary requests and grants limited permissions to IAM users. Token has a default validity of 1 hour   Actions -\u0026gt; Select actions -\u0026gt; type AssumeRole -\u0026gt; in the middle, select AssumeRole Resources -\u0026gt; Specific -\u0026gt; Add ARN  Account *: enter the member Account ID ( the ID you copied in step 1 above) (eg: 999999999943) Role name with path *: enter the role name in step 1.1 (eg: OrganizationAccountAccessRole) Select Add   Select Next: Tags   Select Next: Review Name * : điền policy name (vd:switch_role_999999999943) Select Create policy  Attach the newly created policy to User Groups   Back to Create user group page In the Attach permissions policies - Optional section, select the refesh icon   In the search box, enter: switch_role_999999999943 Check the box Select Create Group  Create User   Do again item 2.2 in the article Managing access rights with IAM In step 2, User name enter: DevLead, In step 3, select DevGroup Complete the rest of the steps and check the newly created IAM User  -\u0026gt; So IAM User: DevLead has been created \u0026amp; has policy name: switch_role_999999999943 attached via group: DevGroup\nNote: You see that in the Users or User Groups interface, there is a function that allows you to assign permissions (Add permissions), but according to the best pratice:\n You should only assign permissions to User Groups After that, add the User in the Group, then the User will automatically have all the permissions that you have given to Groups  -\u0026gt; This makes it easy to manage permissions at a centralized level in groups, avoiding granting permissions by user and difficult in management because you have to go to each user to watch which permission policy we have ever given.\nLogin to the newly created IAM User  Result:\nPerform switch role via member account  note: you have just logged in to IAM User but still belong to management account, now you start performing switch role via member account.\n Repeat step 2 above  Congratulations on switching role via member account (ID: 999999999943) with IAM User DevLead\nYou can use the Create an AWS account function to create an acc for the test environment and do steps 3 to 8 to switch the role through the Test environment with the corresponding Account ID\nB) Switch role to member accounts invited to join AWS Organization When reviewing items:\n 1.1 Create an AWS Account in AWS Organizations 1.3 Invite AWS Account to AWS Organization  -\u0026gt; You will see the ability to create AWS Account in AWS Organizations (Create an AWS account) there is a section to create an IAM role for management account to use to access resources to the member account by Switch role\n-\u0026gt; But the above is completely absent in the function of invite an AWS Account to an AWS Organization (Invite an existing AWS account), so you need to add an IAM Role for the invited AWS Account.\n Create Role with admin rights    Use member account that you have joined AWS Organizations in [1.3]\n  Go to AWS Management Comsole and find IAM service in the search bar, select Roles, select Create role\n   Select AWS account Select Another AWS account Enter the Account ID of management account in the box, eg: 999999999963 Select Next   In the Permissions policies section, enter: AdministratorAccess, press enter Check the box AdministratorAccess select Next   Role name: enter OrganizationAccountAccessRole Scroll to the bottom of the page, select Create role   Check the newly created role, copy the Account ID member account (ID: 888800009920) by clicking the square  Implement switch role    Log in to management account (like step 1 and 2 in part A)\n  lick triangular bookmark on the corner right side - next to acc name, select Switch role\n   In the Account section, paste the Account ID you copied in step 1, for example: 888800009920 In the Role field, enter the role name you used while creating the Account (create step 1), eg: OrganizationAccountAccessRole In the Display Name section, although this is not mandatory information, it is recommended that you name it for easy identification \u0026amp; avoid accessing the wrong environment! In fact, there will be many Accounts to be switched. Ex: FCJ_Invite_Acc In the color section: choose the color you like Select Switch Role   Congratulations, by Switching Role - you have successfully migrated to member account already invited to AWS Organizations  Conclusion: From step 1.1 to step 1.4, we have seen that the management account will be the admin account in the AWS Organization service and the member accounts will be the permanent member accounts. In addition, for the member account to appear in the Organization, we have two ways:\n Create a new acc using the function: Create an AWS account Add an existing account using the function: Invite an existing AWS account  Besides, we can stand from the management account to access the member account via the switch role function and for each of the two ways above, we need different conditions for the switch role to succeed:\n  With the Create an AWS account method, switching the role will be quite simple because during the create of the member account we have allowed AWS to automatically add the role name OrganizationAccountAccessRole with AdministratorAccess permission. In addition, we need to grant assume role permission corresponding to member account ID for IAM User under management account\n  With the Invite an existing AWS account method, switching roles will be more difficult! We need to create the role name OrganizationAccountAccessRole and assign the AdministratorAccess permission to the account ID of the management account In addition, we need to grant assume role permission corresponding to member account ID for IAM User under management account\n  However, the switch role is not the only way to access member accounts. In the steps in item 2, you\u0026rsquo;ll discover another way of accessing it through setting up AWS SSO.\n"
},
{
	"uri": "/4-clean-up/",
	"title": "Clean up resources",
	"tags": [],
	"description": "",
	"content": "Clean up resources  Access to AWS SSO Mangement Console Delete Groups:  Select Groups, tick the groups related to this lab, and select Delete groups. At the prompt Delete groups, type DELETE in the box, and select Delete groups   Delete Users:  Select Users, tick the users related to this lab, and select Delete users. At the Delete users prompt, type DELETE in the box, and select Delete users   Remove Access at AWS Accounts:  Select AWS Accounts and click the name of an AWS account. Remove access with all account access rights. Repeat with the accounts that are assigned access rights to delete.    Delete Permission Sets  Select AWS accounts, select the Permission sets tab, and select the relevant permission sets Press Delete. At the prompt, type the name of the permission set in the box and click Delete.    Note: Back up the data in these accounts if you need them in the future because deleting an account means that all resources and data belonging to that account will be permanently deleted.\n\rDelete AWS Accounts. However, you can keep these accounts for future labs.  To delete an AWS account, you need to log in to the account as root user  Visit the AWS console login page at https://console.aws.amazon.com/ When the Sign in page appears, choose to log in with Root user and enter the email of the account you want to delete. (Example: example+lab12Logging@amazon.com.vn) Pass Security Check and select Forgot Password?  AWS will send forgot password confirmation email to registered email (for example, if your email is example+lab12Logging@amazon.com.vn, AWS email will be sent to example@amazon.com.vn) . Please change your new password via that email and sign in to your AWS account.   After logging in as root user, select the account name in the upper right corner, select My Account, scroll down to the bottom of the page to see the item Close Account. Tick ​​all the boxes and select Close Account    When you create a new AWS account in the AWS Organization, the AWS Organization automatically generates a random password for the root user of that account, and you cannot access them. Therefore, you will access the root user of that account by recovering the forgotten password (forgot password)\n\r"
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]